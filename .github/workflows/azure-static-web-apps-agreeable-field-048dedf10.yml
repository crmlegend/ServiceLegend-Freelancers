name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Use Node.js 20.x (for general workflow context)
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_AGREEABLE_FIELD_048DEDF10 }}
          action: "upload"
          app_location: "/"
          api_location: ""
          output_location: "dist" # Ensure output_location is 'dist' for Vite
          github_id_token: ${{ steps.idtoken.outputs.result }}
          # IMPORTANT: Modified app_build_command for a very explicit and clean installation.
          # This sequence ensures a fresh npm cache, re-installation, and then the build.
          # It also explicitly sets the working directory for npm commands if needed.
          app_build_command: |
            npm cache clean --force
            npm install --prefix . --legacy-peer-deps
            npm run build
        env:
          NODE_VERSION: "20.x"
